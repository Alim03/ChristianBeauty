@model ChristianBeauty.ViewModels.Products.PaginatedProductsViewModel
@{
    ViewData["Title"] = " لیست محصولات";
}

<div class="rn-breadcrumb-inner ptb--30">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-6 col-md-6 col-12">
                <h5 class="title text-center text-md-end">لیست محصولات </h5>
            </div>
            <div class="col-lg-6 col-md-6 col-12">
                <ul class="breadcrumb-list">
                    <li class="item"><a asp-controller="Home" asp-action="Index">خانه</a></li>
                    <li class="separator"><i class="feather-chevron-left"></i></li>
                    <li class="item current">لیست محصولات </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="rn-product-area rn-section-gapTop">
    <div class="container">
        <div class="row mb--50 align-items-center">
            <div class="col-lg-6 col-md-6 col-sm-6 col-12">
                <h3 class="title mb--0" data-sal-delay="150" data-sal="slide-up" data-sal-duration="800">
                    بررسی محصولات
                </h3>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-12 mt_mobile--15">
                <div class="view-more-btn text-end text-sm-start" data-sal-delay="150" data-sal="slide-up"
                    data-sal-duration="800">
                    <button class="discover-filter-button discover-filter-activation btn btn-primary">
                        فیلتر<i class="feather-filter"></i>
                    </button>
                </div>
            </div>
        </div>


        <div class="default-exp-wrapper default-exp-expand">
            <div class="inner">

                @{
                    var query = "";
                    if (!string.IsNullOrEmpty(Context.Request.Query["q"]))
                    {
                        query += $"&q={Context.Request.Query["q"]}";
                    }
                    if (!string.IsNullOrEmpty(Context.Request.Query["categoryId"]))
                    {
                        query += $"&categoryId={Context.Request.Query["categoryId"]}";
                    }
                    if (!string.IsNullOrEmpty(Context.Request.Query["material"]))
                    {
                        query += $"&material={Context.Request.Query["material"]}";
                    }

                }

                <div class="filter-select-option">
                    <label class="filter-leble">دسته</label>
                    <select id="categoryId" name="categoryId" onchange="onFilterChange('categoryId', this.value);">
                        <option selected disabled hidden data-display="دسته" value="">دسته</option>
                        @if (Model.Categories != null)
                        {
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Value">@category.Text</option>
                            }
                        }

                    </select>
                </div>


                <div class="filter-select-option">
                    <label class="filter-leble">زیر دسته</label>
                    <select id="subCategory" onchange="onFilterChange('subcategory', this.value);">
                        <option value="">زیر دسته</option>

                    </select>
                </div>

                <div class="filter-select-option">
                    <label class="filter-leble">جنس</label>
                    <select id="material" name="material" onchange="onFilterChange('material', this.value);">
                        <option selected disabled hidden data-display="جنس">جنس</option>
                        @if (Model.Materials != null)
                        {
                            @foreach (var material in Model.Materials)
                            {
                                <option value="@material.Value">@material.Text</option>
                            }
                        }

                    </select>
                </div>

                <div class="filter-select-option">
                    <label class="filter-leble">نوع فروش</label>
                    <select>
                        <option data-display="نوع فروش">نوع فروش</option>
                        <option value="1">قیمت ثابت</option>
                        <option value="2">حراج به موقع</option>
                        <option value="4">برای فروش نیست</option>
                        <option value="4">برای پیشنهادات باز کنید</option>
                    </select>
                </div>

                <div class="filter-select-option">
                    <label class="filter-leble">بازه قیمت</label>
                    <div class="price_filter s-filter clear">
                        <form action="#" method="GET">
                            <div id="slider-range"></div>
                            <div class="slider__range--output">
                                <div class="price__output--wrap">
                                    <div class="price--output">
                                        <span>قیمت :</span><input type="text" id="amount" readonly>
                                    </div>
                                    <div class="price--filter">
                                        <a class="btn btn-primary btn-small" href="#">فیلتر</a>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <div class="row g-5 mt_dec--30">

            @foreach (var item in Model.Products)
            {
                <!-- start single product -->
                <div class="col-5 col-lg-4 col-md-6 col-sm-6 col-12" data-sal="slide-up" data-sal-delay="150"
                    data-sal-duration="800">
                    <div class="product-style-one no-overlay with-placeBid">
                        <div class="card-thumbnail">
                            <a asp-controller="Product" asp-action="Detail" asp-route-id="@item.Id">

                                @if (item?.Gallery != null && item.Gallery.Count > 0)
                                {
                                    <img src="~/Images/ProductImages/@item.Gallery[0].ImageName" alt="NFT_portfolio">
                                }
                                else
                                {
                                    <img src="" alt="NFT_portfolio">
                                }
                            </a>
                            <a href="product-details.html" class="btn btn-primary">ثبت پیشنهاد</a>
                        </div>
                        <div class="product-share-wrapper">
                            <div class="profile-share">
                                <a href="author.html" class="avatar" data-tooltip="صاحب : آقای جان لی">
                                    <img src="~/images/client/client-2.png" alt="Nft_Profile">
                                </a>
                                <a href="author.html" class="avatar" data-tooltip="صاحب : آقای جان لی">
                                    <img src="~/images/client/client-3.png" alt="Nft_Profile">
                                </a>
                                <a href="author.html" class="avatar" data-tooltip="صاحب : آقای جان لی">
                                    <img src="~/images/client/client-4.png" alt="Nft_Profile">
                                </a>
                                <a class="more-author-text" href="#">9+ درخواست</a>
                            </div>
                            <div class="share-btn share-btn-activation dropdown">
                                <button class="icon" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <svg viewBox="0 0 14 4" fill="none" width="16" height="16"
                                        class="sc-bdnxRM sc-hKFxyN hOiKLt">
                                        <path fill-rule="evenodd" clip-rule="evenodd"
                                            d="M3.5 2C3.5 2.82843 2.82843 3.5 2 3.5C1.17157 3.5 0.5 2.82843 0.5 2C0.5 1.17157 1.17157 0.5 2 0.5C2.82843 0.5 3.5 1.17157 3.5 2ZM8.5 2C8.5 2.82843 7.82843 3.5 7 3.5C6.17157 3.5 5.5 2.82843 5.5 2C5.5 1.17157 6.17157 0.5 7 0.5C7.82843 0.5 8.5 1.17157 8.5 2ZM11.999 3.5C12.8274 3.5 13.499 2.82843 13.499 2C13.499 1.17157 12.8274 0.5 11.999 0.5C11.1706 0.5 10.499 1.17157 10.499 2C10.499 2.82843 11.1706 3.5 11.999 3.5Z"
                                            fill="currentColor"></path>
                                    </svg>
                                </button>

                                <div class="share-btn-setting dropdown-menu dropdown-menu-end">
                                    <button type="button" class="btn-setting-text share-text" data-bs-toggle="modal"
                                        data-bs-target="#shareModal">
                                        اشتراک گذاری
                                    </button>
                                    <button type="button" class="btn-setting-text report-text" data-bs-toggle="modal"
                                        data-bs-target="#reportModal">
                                        گزارش
                                    </button>
                                </div>

                            </div>
                        </div>
                        <a href="product-details.html"><span class="product-name">@item.Name</span></a>
                        <span class="latest-bid">بالاترین پیشنهاد 1/20</span>
                        <div class="bid-react-area">
                            <div class="last-bid">0.244wETH</div>
                            <div class="react-area">
                                <svg viewBox="0 0 17 16" fill="none" width="16" height="16"
                                    class="sc-bdnxRM sc-hKFxyN kBvkOu">
                                    <path
                                        d="M8.2112 14L12.1056 9.69231L14.1853 7.39185C15.2497 6.21455 15.3683 4.46116 14.4723 3.15121V3.15121C13.3207 1.46757 10.9637 1.15351 9.41139 2.47685L8.2112 3.5L6.95566 2.42966C5.40738 1.10976 3.06841 1.3603 1.83482 2.97819V2.97819C0.777858 4.36443 0.885104 6.31329 2.08779 7.57518L8.2112 14Z"
                                        stroke="currentColor" stroke-width="2"></path>
                                </svg>
                                <span class="number">322</span>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end single product -->
            }
        </div>

   <div class="row">
                <div class="col-lg-12" data-sal="slide-up" data-sal-delay="550" data-sal-duration="800">
                    <nav class="pagination-wrapper" aria-label="Page navigation example">
                        <ul class="pagination">
                           
                @if (Model.Metadata.HasPreviousPage)
                {
                    
                     <li class="page-item"><a class="page-link" href="?page=@(Model.Metadata.CurrentPage - 1)@query">قبلی</a></li>
                }

                @for (int i = Model.Metadata.CurrentPage - 5; i <= Model.Metadata.CurrentPage + 5; i++)
                {
                    if (i >= 1 && i <= Model.Metadata.TotalPages)
                    {
                        <li class="page-item @(i == Model.Metadata.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i@query">@i</a>
                        </li>
                    }
                }

                @if (Model.Metadata.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.Metadata.CurrentPage + 1)@query">بعدی</a>
                    </li>
                }
                        </ul>
                    </nav>
                </div>
            </div>
    </div>
</div>



<script>
    function removeParameter(url, parameter)
    {
        var urlParts = url.split('?');
        if (urlParts.length >= 2)
        {
            var prefix = encodeURIComponent(parameter) + '=';
            var parameters = urlParts[1].split(/[&;]/g);

            for (var i = parameters.length; i-- > 0;)
            {
                if (parameters[i].lastIndexOf(prefix, 0) !== -1)
                {
                    parameters.splice(i, 1);
                }
            }

            url = urlParts[0] + (parameters.length > 0 ? '?' + parameters.join('&') : '');
        }

        return url;
    }

    function onFilterChange(filterName, filterValue)
    {
        var baseUrl = '@Url.Action("Index", "Product")';
        var url = removeParameter(window.location.href, filterName);
        url = removeParameter(url, 'page');
        url = url + (url.indexOf('?') === -1 ? '?' : '&') + filterName + '=' + encodeURIComponent(filterValue);
        // Redirect to the new URL
        window.location.href = url;
    }


    function getURLParameter(name)
    {
        var params = new URLSearchParams(window.location.search);
        console.log(params.get(name));
        return params.get(name);
    }

    function selectDropdownOption(dropdown, parameterValue)
    {
        for (let i = 0; i < dropdown.options.length; i++)
        {
            if (dropdown.options[i].value === parameterValue)
            {
                dropdown.options[i].selected = true;
                break;
            }
        }
    }
    const dropdownCategory = document.getElementById("categoryId");
    var categoryParameterValue = getURLParameter("categoryId");

    var materialParameterValue = getURLParameter("material");
    const dropdownMaterial = document.getElementById("material");

    var subCategoryParameterValue = getURLParameter("subcategory");
    const dropdownSubCategory = document.getElementById('subCategory');


    if (categoryParameterValue != null)
    {
        selectDropdownOption(dropdownCategory, categoryParameterValue);

        dropdownSubCategory.disabled = false;
        loadSubCategories(categoryParameterValue);
    }
    else
    {
        dropdownSubCategory.disabled = true;
        clearSubCategories();
    }
    if (materialParameterValue != null)
    {
        selectDropdownOption(dropdownMaterial, materialParameterValue);
    }


    document.addEventListener('DOMContentLoaded', function ()
    {
        if (subCategoryParameterValue != null)
        {
            selectDropdownOption(dropdownSubCategory, subCategoryParameterValue);
        }
    })    // Add event listener to the Category select



    // Function to load Sub Categories from the backend
    function loadSubCategories(categoryId)
    {
        // Make an asynchronous request to the backend API
        // Replace 'backend/api/subcategories?categoryId=' with the actual endpoint
        fetch(`/Product/GetSubCategories?categoryId=${categoryId}`)
            .then(response => response.json())
            .then(data =>
            {
                // Populate the Sub Category select with the fetched data
                populateSubCategories(data);
            })
            .catch(error =>
            {
                console.error('Error:', error);
            });
    }

    // Function to populate the Sub Category select with options
    function populateSubCategories(data)
    {
        // Clear existing options
        clearSubCategories();

        // Populate with new options
        data.forEach(subCategory =>
        {
            const option = document.createElement('option');
            option.value = subCategory.id;
            option.textContent = subCategory.name;
            dropdownSubCategory.appendChild(option);
        });
    }

    // Function to clear the Sub Category select
    function clearSubCategories()
    {
        dropdownSubCategory.innerHTML = '<option value="">زیر دسته</option>';
    }
</script>
